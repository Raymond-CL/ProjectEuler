Some solutions to problems in Project Euler
https://projecteuler.net

Story:
- I was doing my masters in pure mathematics back in 2010 when I got to know about the project.
- then there was this hack on the site some time later and I lost all my progress and account.
- now in 2020, while doing a doctorate in theoretical physics, I decided to revisit the problems
to pick up the maths stuff that I once dropped. Hopefully I remember.
- and with the power of github, I can save my progress now.
- You will notice that many problems can be easily solved using different languages.
for example, using Mathematica or Python to solve problems with prime numbers.
- Out of all the programming languages out there, I don't want to use the one that has too much
built-in libraries like Mathematica, or too low-end just for efficiency like assembly.
- Between Fortran, C/C++, Java and Haskel, I ended up using C++. Since it is easy to read, logically
transparent, and doesn't require class or functional knowledge like the other.
- I believe that the idea behind Project-Euler is to use any programming language to solve a 
particular problem with an efficient algorithm. And the emphasis here is the efficiency of your
algorithm, and C-language gives a good presentation of that logic. Once the algorithm is understood,
one can rewrite it in any other language.
- The solutions will be in minimal style. One that doesn't involve too much compiler directives,
without useless arguments, and no pointers. Necessary comments will be given as well.
- I will try to write a generalized solution as well, one that would require minimum change if
the problem changes its parameters. (Because that's what good programs do!)
- One can find many solutions in github, I'll try my best to solve a problem on my own before 
searching for others' methods.
